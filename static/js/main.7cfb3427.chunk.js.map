{"version":3,"sources":["components/User.jsx","components/Pagination.jsx","components/UsersTable.jsx","components/UserDetails.jsx","App.js","index.js"],"names":["User","indexOfLastPage","data","first_name","last_name","age","web","email","id","style","cursor","to","target","href","indexOfFirstPage","Pagination","setPageNumber","totalUsers","currentPage","useState","displayPage","setDisplayPage","leftDisabled","setLeftDisabled","rightDisabled","setRightDisabled","totalPage","Math","ceil","handleDisplayPagination","temp","i","push","useEffect","min","className","onClick","max","pointerEvents","map","number","backgroundColor","UsersTable","currentUsers","handleInputChange","isSort","setIsSort","inputValue","setInputValue","tempUsers","setTempUsers","handleSort","type","Object","assign","obj","field","sort","a","b","setSortedData","filter","user","toLowerCase","startsWith","filterData","width","minWidth","placeholder","value","onChange","e","trim","scope","UserDetails","usersData","userId","useParams","currentUser","find","myStyle","fontWeight","color","company_name","city","state","zip","App","isLoading","setIsLoading","setUsersData","setCurrentPage","searchedUsers","setSearchedUsers","searchedInputValue","setSearchedInputValue","axios","get","then","res","catch","err","console","log","fetchUserData","indexOfLastUser","indexOfFirstUser","slice","length","path","exact","val","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cfb3427.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//just rendering the user on the userTable component\r\n\r\nfunction User({ data }) {\r\n  const { first_name, last_name, age, web, email, id } = data;\r\n  return (\r\n    <tr style={{ cursor: \"pointer\" }}>\r\n      <td>\r\n        <Link to={`/userDataWebApp/${id}`}>{first_name}</Link>\r\n      </td>\r\n\r\n      <td>{last_name}</td>\r\n      <td>{age}</td>\r\n      <td>{email}</td>\r\n      <td>\r\n        <a target=\"_blank\" href={web}>\r\n          {web}\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\r\nlet indexOfFirstPage = 1;\r\nlet indexOfLastPage;\r\n\r\nfunction Pagination({ setPageNumber, totalUsers, currentPage }) {\r\n  const [displayPage, setDisplayPage] = useState([]);\r\n  const [leftDisabled, setLeftDisabled] = useState(true); //left arrow to disabled or not in the pagination bar\r\n  const [rightDisabled, setRightDisabled] = useState(false); //right arrow to disabled or not n the pagination bar\r\n  const totalPage = Math.ceil(totalUsers / 10);\r\n\r\n  const handleDisplayPagination = () => {\r\n    let temp = [];\r\n    for (let i = indexOfFirstPage; i <= indexOfLastPage; i++) {\r\n      temp.push(i);\r\n    }\r\n    if (indexOfFirstPage == 1) setLeftDisabled(true);\r\n    else setLeftDisabled(false);\r\n    if (indexOfLastPage == totalPage) setRightDisabled(true);\r\n    else setRightDisabled(false);\r\n    setDisplayPage(temp);\r\n  };\r\n\r\n  //SET THE INITIAL VALUES\r\n  useEffect(() => {\r\n    indexOfLastPage = Math.min(10, totalPage);\r\n    indexOfFirstPage = 1;\r\n    handleDisplayPagination();\r\n  }, [totalUsers]);\r\n\r\n  //Go to preveious Page number range\r\n  const prevPageNumber = () => {\r\n    indexOfLastPage = indexOfFirstPage - 1;\r\n    indexOfFirstPage = Math.max(1, indexOfLastPage - 9);\r\n\r\n    handleDisplayPagination();\r\n  };\r\n  //Go to next Page number range\r\n  const nextPageNumber = () => {\r\n    indexOfFirstPage = indexOfLastPage + 1;\r\n    indexOfLastPage = Math.min(totalPage, indexOfFirstPage + 9);\r\n\r\n    handleDisplayPagination();\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        <li\r\n          className=\"page-item\"\r\n          onClick={prevPageNumber}\r\n          style={\r\n            leftDisabled\r\n              ? { pointerEvents: \"none\", cursor: \"pointer\" }\r\n              : { cursor: \"pointer\" }\r\n          }\r\n        >\r\n          <a className=\"page-link\">\r\n            <i className=\"fas fa-chevron-left\"></i>\r\n          </a>\r\n        </li>\r\n        {displayPage.map((number) => {\r\n          return (\r\n            <li\r\n              key={number}\r\n              className=\"page-item\"\r\n              onClick={() => {\r\n                setPageNumber(number);\r\n              }}\r\n            >\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                style={\r\n                  currentPage == number ? { backgroundColor: \"#ceceff\" } : {}\r\n                }\r\n              >\r\n                {number}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n        <li\r\n          className=\"page-item\"\r\n          onClick={nextPageNumber}\r\n          style={\r\n            rightDisabled\r\n              ? { pointerEvents: \"none\", cursor: \"pointer\" }\r\n              : { cursor: \"pointer\" }\r\n          }\r\n        >\r\n          <a className=\"page-link\">\r\n            <i className=\"fas fa-chevron-right\"></i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport User from \"./User\";\r\nimport Pagination from \"./Pagination\"; //component used for pagination\r\n\r\nfunction UsersTable({\r\n  currentUsers,\r\n  setPageNumber,\r\n  totalUsers,\r\n  currentPage,\r\n  handleInputChange,\r\n}) {\r\n  //<<<======state to store current order of column||| 0--->random order, 1--->inc order, -1-->dec order=======>>>>\r\n  const [isSort, setIsSort] = useState({});\r\n  const [inputValue, setInputValue] = useState(\"\"); //input value for search bar\r\n  const [tempUsers, setTempUsers] = useState([]); // current users in the page\r\n\r\n  //<<<<==============================SET TO INITIAL STATE WHEN TOTAL USERS CHANGES ACCORDING TO THE SEARCHED VALUE====================>>>>\r\n  useEffect(() => {\r\n    setIsSort({\r\n      id: 1,\r\n      first_name: 0,\r\n      last_name: 0,\r\n      age: 0,\r\n      email: 0,\r\n      web: 0,\r\n    });\r\n  }, [totalUsers, currentPage]);\r\n\r\n  //<<<<==============================SET TO INITIAL STATE WHEN TOTAL USERS CHANGES ACCORDING TO THE SEARCHED VALUE====================>>>>\r\n\r\n  //<<<<===============================================HANDLES WHETHER TO SORT DATA IN INC OR DEC ORDER=================================>>>>\r\n  const handleSort = ({ type }) => {\r\n    let temp = Object.assign({}, isSort);\r\n    if (temp[type] == 0) temp[type] = 1;\r\n    else if (temp[type] == 1) temp[type] = -1;\r\n    else temp[type] = 1;\r\n\r\n    for (let obj in temp) {\r\n      if (obj == type) continue;\r\n      else temp[obj] = 0;\r\n    }\r\n    setIsSort(temp);\r\n  };\r\n  //<<<<===============================================HANDLES WHETHER TO SORT DATA IN INC OR DEC ORDER=================================>>>>\r\n\r\n  //<<<=======================================================HANDLES SORTING OF CURRENT USERS============================================>>>\r\n  const setSortedData = () => {\r\n    const temp = Object.assign([], tempUsers);\r\n    for (let field in isSort) {\r\n      if (isSort[field] == 1) {\r\n        temp.sort((a, b) => {\r\n          if (a[field] < b[field]) return -1;\r\n          else if (a[field] > b[field]) return 1;\r\n          return 0;\r\n        });\r\n      } else if (isSort[field] == -1) {\r\n        temp.sort((a, b) => {\r\n          if (a[field] < b[field]) return 1;\r\n          else if (a[field] > b[field]) return -1;\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    setTempUsers(temp);\r\n  };\r\n  useEffect(() => {\r\n    setSortedData();\r\n  }, [isSort, currentUsers]);\r\n\r\n  //<<<=======================================================HANDLES SORTING OF CURRENT USERS============================================>>>\r\n\r\n  //<<=================================================FILTER DATA=========================================>>>>>>\r\n  const filterData = () => {\r\n    const temp = currentUsers.filter((user) => {\r\n      return (\r\n        user.first_name.toLowerCase().startsWith(inputValue) ||\r\n        user.last_name.toLowerCase().startsWith(inputValue)\r\n      );\r\n    });\r\n    setTempUsers(temp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterData();\r\n    handleInputChange(inputValue);\r\n  }, [inputValue, currentUsers]);\r\n\r\n  //<<=================================================FILTER DATA===========================================>>>>>>\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Users</h2>\r\n      <div className=\"input-group\" style={{ width: \"40%\", minWidth: \"400px\" }}>\r\n        <input\r\n          type=\"search\"\r\n          className=\"form-control rounded\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          aria-describedby=\"search-addon\"\r\n          value={inputValue}\r\n          onChange={(e) => {\r\n            setInputValue(e.target.value.trim());\r\n          }}\r\n        />\r\n        <button type=\"button\" className=\"btn btn-outline-primary\">\r\n          search\r\n        </button>\r\n      </div>\r\n      <div className=\"users\">\r\n        <table className=\"table table-striped table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\" style={{ minWidth: \"120px\" }}>\r\n                First Name{\" \"}\r\n                <span onClick={() => handleSort({ type: \"first_name\" })}>\r\n                  {isSort.first_name == 0 ? (\r\n                    <i className=\"fas fa-sort\"></i>\r\n                  ) : isSort.first_name == 1 ? (\r\n                    <i className=\"fas fa-sort-up\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-sort-down\"></i>\r\n                  )}\r\n                </span>\r\n              </th>\r\n              <th scope=\"col\" style={{ minWidth: \"120px\" }}>\r\n                Last Name{\" \"}\r\n                <span onClick={() => handleSort({ type: \"last_name\" })}>\r\n                  {isSort.last_name == 0 ? (\r\n                    <i className=\"fas fa-sort\"></i>\r\n                  ) : isSort.last_name == 1 ? (\r\n                    <i className=\"fas fa-sort-up\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-sort-down\"></i>\r\n                  )}\r\n                </span>\r\n              </th>\r\n              <th scope=\"col\" style={{ minWidth: \"110px\" }}>\r\n                Age{\" \"}\r\n                <span onClick={() => handleSort({ type: \"age\" })}>\r\n                  {isSort.age == 0 ? (\r\n                    <i className=\"fas fa-sort\"></i>\r\n                  ) : isSort.age == 1 ? (\r\n                    <i className=\"fas fa-sort-up\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-sort-down\"></i>\r\n                  )}\r\n                </span>\r\n              </th>\r\n              <th scope=\"col\" style={{ minWidth: \"110px\" }}>\r\n                Email{\" \"}\r\n                <span onClick={() => handleSort({ type: \"email\" })}>\r\n                  {isSort.email == 0 ? (\r\n                    <i className=\"fas fa-sort\"></i>\r\n                  ) : isSort.email == 1 ? (\r\n                    <i className=\"fas fa-sort-up\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-sort-down\"></i>\r\n                  )}\r\n                </span>\r\n              </th>\r\n              <th scope=\"col\" style={{ minWidth: \"110px\" }}>\r\n                Web{\" \"}\r\n                <span onClick={() => handleSort({ type: \"web\" })}>\r\n                  {isSort.web == 0 ? (\r\n                    <i className=\"fas fa-sort\"></i>\r\n                  ) : isSort.web == 1 ? (\r\n                    <i className=\"fas fa-sort-up\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-sort-down\"></i>\r\n                  )}\r\n                </span>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tempUsers.map((data) => {\r\n              return <User key={data.id} data={data} />;\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          setPageNumber={setPageNumber}\r\n          totalUsers={totalUsers}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersTable;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\"; // get accesss to the variable inside the URL\r\n\r\nfunction UserDetails({ usersData }) {\r\n  const { userId } = useParams();\r\n  const currentUser = usersData.find((user) => user.id == userId); // the current user to be displayed in detail whose user id is = userId(from URL)\r\n  const myStyle = { fontWeight: \"bold\" };\r\n  return (\r\n    <>\r\n      {currentUser ? (\r\n        <div className=\"container mt-5\">\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item active\">\r\n              <Link to=\"/userDataWebApp/\">\r\n                <span className=\"mr-5\" style={{ color: \"white\" }}>\r\n                  <i className=\"fas fa-arrow-left\"></i>\r\n                </span>\r\n              </Link>\r\n              <span>\r\n                {\" \"}\r\n                Details:{\" \"}\r\n                <span style={myStyle}>\r\n                  {currentUser.first_name} {currentUser.last_name}\r\n                </span>\r\n              </span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              First Name: <span style={myStyle}>{currentUser.first_name}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              Last Name: <span style={myStyle}>{currentUser.last_name}</span>{\" \"}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              Company Name:{\" \"}\r\n              <span style={myStyle}>{currentUser.company_name}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              City: <span style={myStyle}>{currentUser.city}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              State: <span style={myStyle}>{currentUser.state}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              Zip: <span style={myStyle}>{currentUser.zip}</span>\r\n            </li>\r\n\r\n            <li className=\"list-group-item\">\r\n              Email: <span style={myStyle}>{currentUser.email}</span>{\" \"}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              Web:{\" \"}\r\n              <span style={myStyle}>\r\n                <a href={currentUser.web} target=\"_blank\">\r\n                  {\" \"}\r\n                  {currentUser.web}\r\n                </a>\r\n              </span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              Age: <span style={myStyle}> {currentUser.age}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <h1></h1>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserDetails;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport UsersTable from \"./components/UsersTable\";\nimport UserDetails from \"./components/UserDetails\";\nimport \"../src/style/app.css\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [usersData, setUsersData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchedUsers, setSearchedUsers] = useState([]);\n  const [searchedInputValue, setSearchedInputValue] = useState(\"\");\n  const usersPerPage = 10;\n\n  //<<<=========================================FETCHES DATA FROM THA API===================================>>>\n  useEffect(() => {\n    const fetchUserData = async () => {\n      setIsLoading(true);\n      axios\n        .get(\n          \"https://datapeace-storage.s3-us-west-2.amazonaws.com/dummy_data/users.json\"\n        )\n        .then((res) => {\n          setUsersData(res.data);\n          setIsLoading(false);\n          setSearchedUsers(res.data);\n        })\n        .catch((err) => console.log(err));\n    };\n    fetchUserData();\n  }, []);\n  //<<<=========================================FETCHES DATA FROM THA API===================================>>>\n\n  //Get current Users\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = searchedUsers.slice(indexOfFirstUser, indexOfLastUser);\n  const totalUsers = searchedUsers.length;\n\n  //setPageNumber\n  const setPageNumber = (number) => {\n    setCurrentPage(number);\n  };\n\n  //<<<=========================================HANDLES SEARCHED USERS DATA===================================>>>\n\n  //handle input change\n  const handleInputChange = (val) => {\n    setSearchedInputValue(val);\n  };\n  useEffect(() => {\n    setSearchedUsers(\n      usersData.filter((user) => {\n        return (\n          user.first_name.toLowerCase().startsWith(searchedInputValue) ||\n          user.last_name.toLowerCase().startsWith(searchedInputValue)\n        );\n      })\n    );\n    if (searchedInputValue) setCurrentPage(1);\n  }, [searchedInputValue]);\n  //<<<=========================================HANDLES SEARCHED USERS DATA===================================>>>\n\n  return (\n    <Router>\n      {isLoading ? (\n        <h3 className=\"text-center\">Loading...</h3>\n      ) : (\n        <Switch>\n          <Route path=\"/userDataWebApp/\" exact>\n            <UsersTable\n              currentUsers={currentUsers}\n              setPageNumber={setPageNumber}\n              totalUsers={totalUsers}\n              currentPage={currentPage}\n              handleInputChange={handleInputChange}\n            />\n          </Route>\n          <Route path=\"/userDataWebApp/:userId\">\n            <UserDetails usersData={usersData} />\n          </Route>\n        </Switch>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}