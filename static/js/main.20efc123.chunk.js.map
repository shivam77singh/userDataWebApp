{"version":3,"sources":["components/User.jsx","components/Pagination.jsx","components/UsersTable.jsx","components/UserDetails.jsx","App.js","index.js"],"names":["User","data","first_name","last_name","age","web","email","id","style","cursor","to","target","href","Pagination","setPageNumber","totalUsers","currentPage","useState","displayPage","setDisplayPage","leftDisabled","setLeftDisabled","rightDisabled","setRightDisabled","useEffect","pageNumbers","i","push","className","onClick","lastPage","startPage","slice","pointerEvents","map","number","backgroundColor","Math","min","UsersTable","currentUsers","isSort","setIsSort","inputValue","setInputValue","tempUsers","setTempUsers","handleChange","type","temp","Object","assign","obj","field","sort","a","b","setSortedData","filter","user","toLowerCase","startsWith","width","minWidth","placeholder","value","onChange","e","trim","scope","class","UserDetails","userId","useParams","currentUser","find","myStyle","fontWeight","color","company_name","city","state","zip","App","isLoading","setIsLoading","usersData","setUsersData","setCurrentPage","axios","get","then","res","catch","err","console","log","fetchUserData","indexOfLastUser","indexOfFirstUser","length","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20efc123.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction User({ data }) {\r\n  const { first_name, last_name, age, web, email, id } = data;\r\n  return (\r\n    <tr style={{ cursor: \"pointer\" }}>\r\n      {/* <th scope=\"row\">{id}</th> */}\r\n\r\n      <td>\r\n        <Link to={`/userDataWebApp/${id}`}>{first_name}</Link>\r\n      </td>\r\n\r\n      <td>{last_name}</td>\r\n      <td>{age}</td>\r\n      <td>{email}</td>\r\n      <td>\r\n        <a target=\"_blank\" href={web}>\r\n          {web}\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Pagination({ setPageNumber, totalUsers, currentPage }) {\r\n  const [displayPage, setDisplayPage] = useState([\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n  ]);\r\n  const [leftDisabled, setLeftDisabled] = useState(true);\r\n  const [rightDisabled, setRightDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (displayPage[0] === 1) setLeftDisabled(true);\r\n    else setLeftDisabled(false);\r\n    if (displayPage[9] === totalUsers / 10) setRightDisabled(true);\r\n    else setRightDisabled(false);\r\n  }, [displayPage]);\r\n\r\n  let pageNumbers = [];\r\n  for (let i = 1; i <= totalUsers; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  //Go to preveious Page number\r\n\r\n  const prevPageNumber = () => {\r\n    const lastPage = displayPage[0] - 1;\r\n    const startPage = lastPage - 10;\r\n\r\n    setDisplayPage(pageNumbers.slice(startPage, lastPage));\r\n  };\r\n  const nextPageNumber = () => {\r\n    const lastPage = Math.min(totalUsers, displayPage[9] + 10);\r\n    const startPage = lastPage - 10;\r\n\r\n    setDisplayPage(pageNumbers.slice(startPage, lastPage));\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        <li\r\n          className=\"page-item\"\r\n          onClick={prevPageNumber}\r\n          style={\r\n            leftDisabled\r\n              ? { pointerEvents: \"none\", cursor: \"pointer\" }\r\n              : { cursor: \"pointer\" }\r\n          }\r\n        >\r\n          <a className=\"page-link\">\r\n            <i className=\"fas fa-chevron-left\"></i>\r\n          </a>\r\n        </li>\r\n        {displayPage.map((number) => {\r\n          return (\r\n            <li\r\n              key={number}\r\n              className=\"page-item\"\r\n              onClick={() => {\r\n                setPageNumber(number);\r\n              }}\r\n            >\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                style={\r\n                  currentPage == number ? { backgroundColor: \"#ceceff\" } : {}\r\n                }\r\n              >\r\n                {number}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n        <li\r\n          className=\"page-item\"\r\n          onClick={nextPageNumber}\r\n          style={\r\n            rightDisabled\r\n              ? { pointerEvents: \"none\", cursor: \"pointer\" }\r\n              : { cursor: \"pointer\" }\r\n          }\r\n        >\r\n          <a className=\"page-link\">\r\n            <i className=\"fas fa-chevron-right\"></i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport User from \"./User\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nfunction UsersTable({ currentUsers, setPageNumber, totalUsers, currentPage }) {\r\n  const [isSort, setIsSort] = useState({\r\n    id: 1,\r\n    first_name: 0,\r\n    last_name: 0,\r\n    age: 0,\r\n    email: 0,\r\n    web: 0,\r\n  });\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [tempUsers, setTempUsers] = useState([]);\r\n\r\n  const handleChange = ({ type }) => {\r\n    let temp = Object.assign({}, isSort);\r\n    if (temp[type] == 0) temp[type] = 1;\r\n    else if (temp[type] == 1) temp[type] = -1;\r\n    else temp[type] = 1;\r\n\r\n    for (let obj in temp) {\r\n      if (obj == type) continue;\r\n      else temp[obj] = 0;\r\n    }\r\n    setIsSort(temp);\r\n  };\r\n  const setSortedData = () => {\r\n    const temp = Object.assign([], tempUsers);\r\n    for (let field in isSort) {\r\n      if (isSort[field] == 1) {\r\n        temp.sort((a, b) => {\r\n          if (a[field] < b[field]) return -1;\r\n          else if (a[field] > b[field]) return 1;\r\n          return 0;\r\n        });\r\n      } else if (isSort[field] == -1) {\r\n        temp.sort((a, b) => {\r\n          if (a[field] < b[field]) return 1;\r\n          else if (a[field] > b[field]) return -1;\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    setTempUsers(temp);\r\n  };\r\n  useEffect(() => {\r\n    setSortedData();\r\n  }, [isSort, currentUsers]);\r\n\r\n  useEffect(() => {\r\n    const temp = currentUsers.filter((user) => {\r\n      return (\r\n        user.first_name.toLowerCase().startsWith(inputValue) ||\r\n        user.last_name.toLowerCase().startsWith(inputValue)\r\n      );\r\n    });\r\n    setTempUsers(temp);\r\n  }, [inputValue, currentUsers]);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Users</h2>\r\n      <div className=\"input-group\" style={{ width: \"40%\", minWidth: \"400px\" }}>\r\n        <input\r\n          type=\"search\"\r\n          className=\"form-control rounded\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          aria-describedby=\"search-addon\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value.trim())}\r\n        />\r\n        <button type=\"button\" className=\"btn btn-outline-primary\">\r\n          search\r\n        </button>\r\n      </div>\r\n      <div className=\"users\">\r\n        <table className=\"table table-striped table-hover\">\r\n          <thead>\r\n            <tr>\r\n              {/* <th scope=\"col\">\r\n                #{\" \"}\r\n                <span onClick={() => handleChange({ type: \"id\" })}>\r\n                  {isSort.id == 0 ? (\r\n                    <i className=\"fas fa-sort\"></i>\r\n                  ) : isSort.id == 1 ? (\r\n                    <i class=\"fas fa-sort-up\"></i>\r\n                  ) : (\r\n                    <i class=\"fas fa-sort-down\"></i>\r\n                  )}\r\n                </span>\r\n              </th> */}\r\n              <th scope=\"col\">\r\n                First Name{\" \"}\r\n                <span onClick={() => handleChange({ type: \"first_name\" })}>\r\n                  {isSort.first_name == 0 ? (\r\n                    <i className=\"fas fa-sort\"></i>\r\n                  ) : isSort.first_name == 1 ? (\r\n                    <i class=\"fas fa-sort-up\"></i>\r\n                  ) : (\r\n                    <i class=\"fas fa-sort-down\"></i>\r\n                  )}\r\n                </span>\r\n              </th>\r\n              <th scope=\"col\">\r\n                Last Name{\" \"}\r\n                <span onClick={() => handleChange({ type: \"last_name\" })}>\r\n                  {isSort.last_name == 0 ? (\r\n                    <i className=\"fas fa-sort\"></i>\r\n                  ) : isSort.last_name == 1 ? (\r\n                    <i class=\"fas fa-sort-up\"></i>\r\n                  ) : (\r\n                    <i class=\"fas fa-sort-down\"></i>\r\n                  )}\r\n                </span>\r\n              </th>\r\n              <th scope=\"col\">\r\n                Age{\" \"}\r\n                <span onClick={() => handleChange({ type: \"age\" })}>\r\n                  {isSort.age == 0 ? (\r\n                    <i className=\"fas fa-sort\"></i>\r\n                  ) : isSort.age == 1 ? (\r\n                    <i class=\"fas fa-sort-up\"></i>\r\n                  ) : (\r\n                    <i class=\"fas fa-sort-down\"></i>\r\n                  )}\r\n                </span>\r\n              </th>\r\n              <th scope=\"col\">\r\n                Email{\" \"}\r\n                <span onClick={() => handleChange({ type: \"email\" })}>\r\n                  {isSort.email == 0 ? (\r\n                    <i className=\"fas fa-sort\"></i>\r\n                  ) : isSort.email == 1 ? (\r\n                    <i class=\"fas fa-sort-up\"></i>\r\n                  ) : (\r\n                    <i class=\"fas fa-sort-down\"></i>\r\n                  )}\r\n                </span>\r\n              </th>\r\n              <th scope=\"col\">\r\n                Web{\" \"}\r\n                <span onClick={() => handleChange({ type: \"web\" })}>\r\n                  {isSort.web == 0 ? (\r\n                    <i className=\"fas fa-sort\"></i>\r\n                  ) : isSort.web == 1 ? (\r\n                    <i class=\"fas fa-sort-up\"></i>\r\n                  ) : (\r\n                    <i class=\"fas fa-sort-down\"></i>\r\n                  )}\r\n                </span>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tempUsers.map((data) => {\r\n              return <User key={data.id} data={data} />;\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          setPageNumber={setPageNumber}\r\n          totalUsers={totalUsers}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersTable;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction UserDetails({ currentUsers }) {\r\n  const { userId } = useParams();\r\n  const currentUser = currentUsers.find((user) => user.id == userId);\r\n  const myStyle = { fontWeight: \"bold\" };\r\n  return (\r\n    <>\r\n      {currentUser ? (\r\n        <div className=\"container mt-5\">\r\n          <ul class=\"list-group\">\r\n            <li class=\"list-group-item active\">\r\n              <Link to=\"/userDataWebApp/\">\r\n                <span className=\"mr-5\" style={{ color: \"white\" }}>\r\n                  <i class=\"fas fa-arrow-left\"></i>\r\n                </span>\r\n              </Link>\r\n              <span>\r\n                {\" \"}\r\n                Details:{\" \"}\r\n                <span style={myStyle}>\r\n                  {currentUser.first_name} {currentUser.last_name}\r\n                </span>\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              First Name: <span style={myStyle}>{currentUser.first_name}</span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              Last Name: <span style={myStyle}>{currentUser.last_name}</span>{\" \"}\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              Company Name:{\" \"}\r\n              <span style={myStyle}>{currentUser.company_name}</span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              City: <span style={myStyle}>{currentUser.city}</span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              State: <span style={myStyle}>{currentUser.state}</span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              Zip: <span style={myStyle}>{currentUser.zip}</span>\r\n            </li>\r\n\r\n            <li class=\"list-group-item\">\r\n              Email: <span style={myStyle}>{currentUser.email}</span>{\" \"}\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              Web:{\" \"}\r\n              <span style={myStyle}>\r\n                <a href={currentUser.web} target=\"_blank\">\r\n                  {\" \"}\r\n                  {currentUser.web}\r\n                </a>\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              Age: <span style={myStyle}> {currentUser.age}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <h1></h1>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserDetails;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport UsersTable from \"./components/UsersTable\";\nimport UserDetails from \"./components/UserDetails\";\nimport \"../src/style/app.css\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [usersData, setUsersData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const usersPerPage = 10;\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      setIsLoading(true); //intital loading of data\n      axios\n        .get(\n          \"https://datapeace-storage.s3-us-west-2.amazonaws.com/dummy_data/users.json\"\n        )\n        .then((res) => {\n          setUsersData(res.data);\n          setIsLoading(false);\n        })\n        .catch((err) => console.log(err));\n    };\n    fetchUserData(); //funcion to fetch data from api\n  }, []);\n\n  //Get current Users\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = usersData.slice(indexOfFirstUser, indexOfLastUser);\n  const totalUsers = usersData.length;\n\n  //setPageNumber\n  const setPageNumber = (number) => {\n    setCurrentPage(number);\n  };\n\n  return (\n    <Router>\n      {isLoading ? (\n        <h3 className=\"text-center\">Loading...</h3>\n      ) : (\n        <Switch>\n          <Route path=\"/userDataWebApp/\" exact>\n            <UsersTable\n              currentUsers={currentUsers}\n              setPageNumber={setPageNumber}\n              totalUsers={totalUsers}\n              currentPage={currentPage}\n            />\n          </Route>\n          <Route path=\"/userDataWebApp/:userId\">\n            <UserDetails currentUsers={currentUsers} />\n          </Route>\n        </Switch>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}